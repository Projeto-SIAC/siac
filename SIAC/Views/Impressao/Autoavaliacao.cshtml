@*
This file is part of SIAC.

Copyright (C) 2016 Felipe Mateus Freire Pontes <felipemfpontes@gmail.com>
Copyright (C) 2016 Francisco Bento da Silva Júnior <francisco.bento.jr@hotmail.com>

SIAC is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
*@
@model ImpressaoAvaliacaoViewModel

@{
    ViewBag.Title = "Autoavaliação " + Model.Avaliacao.CodAvaliacao;
    Layout = null;
    List<Questao> lstQuestao = Model.Avaliacao.QuestaoEmbaralhada;
}
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title - SIAC</title>
    <link href="~/Resources/images/layout/logo-black.png" rel="shortcut icon" />
    @Styles.Render("~/bundles/css")
    <style>
        @@media print  
        {
            div.parentQuestao {
                page-break-before: always;
            }
            div.questao {
                padding-top: 2.5em;
                page-break-inside: avoid;
            }
            div.form > :first-child {
                padding-top: unset;
                page-break-inside: avoid;
            }
            div.questao .ui.header {
                font-size: 1em;
            }
        }
    </style>
</head>
<body>
    <div class="ui text content">
        <h2>@ViewBag.Title</h2>
    </div>
        <div class="ui vertical segment">
            <div class="ui header dividing">
                Cabeçalho
            </div>
            <table class="ui very basic table">
                <tbody>
                    <tr>
                        <td>
                            <b>Instituição</b>
                        </td>
                        <td>
                            Sistema Interativo de Avaliação de Conhecimento
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <b>Nome</b>
                        </td>
                        <td>
                            @Model.Avaliacao.AvalAuto.PessoaFisica.Nome
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <b>Data de Cadastro</b>
                        </td>
                        <td>
                            @Model.Avaliacao.DtCadastro.ToShortDateString()
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <b>Data de Impressão</b>
                        </td>
                        <td>
                            @DateTime.Now.ToShortDateString()
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>

        <div class="ui vertical segment">
            <div class="ui header dividing">
                Informações
            </div>
            <table class="ui striped table">
                <thead>
                    <tr>
                        <th>Disciplina</th>
                        <th>Tema(s)</th>
                        <th>Quantidade</th>
                        <th>Dificuldade</th>
                    </tr>
                </thead>
                <tbody>
                @foreach (var disciplina in Model.Avaliacao.AvaliacaoTema.Select(a => a.Tema.Disciplina).Distinct().ToList())
                {
                    <tr>
                        <td>
                            <b>@disciplina.Descricao</b>
                        </td>
                        <td class="ui labels">
                            @foreach (var avalTema in Model.Avaliacao.AvaliacaoTema.Where(a => a.Tema.CodDisciplina == disciplina.CodDisciplina))
                            {
                                <div class="ui tag label">@avalTema.Tema.Descricao</div>
                            }
                        </td>
                        <td class="ui labels">
                            <div class="ui label">Objetiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disciplina.CodDisciplina, TipoQuestao.OBJETIVA)</div></div>
                            <div class="ui label">Discursiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disciplina.CodDisciplina, TipoQuestao.DISCURSIVA)</div></div>
                        </td>
                        <td>
                            @Model.Avaliacao.AvaliacaoTema.ToList().MaxDificuldade(disciplina.CodDisciplina)
                        </td>
                    </tr>
                }
                </tbody>
            </table>
        </div>

        <div class="ui parentQuestao vertical segment">
            <div class="ui header dividing">
                Questões
            </div>
            <div class="ui form">
                @for (int i = 0; i < lstQuestao.Count; i++)
                {
                    <div class="questao">
                        <div class="ui header" style="text-align:justify">
                            @Html.Raw((i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).ToHtml("p"))
                        </div>

                        @if (lstQuestao[i].CodTipoQuestao == TipoQuestao.OBJETIVA)
                        {
                            List<Alternativa> lstAlternativa = lstQuestao[i].AlternativaEmbaralhada;
                            <div class="grouped fields">
                                <label>Marque a alternativa</label>
                                @for (int j = 0; j < lstAlternativa.Count; j++)
                                {
                                    <div class="field">
                                        <div class="ui radio checkbox">
                                            <input type="radio" />
                                            <label><b>@j.GetIndiceAlternativa()</b>) @lstAlternativa[j].Enunciado</label>
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                        <div class="field">
                            <label>Resposta</label>
                            <textarea></textarea>
                        </div>
                        }

                        @if (lstQuestao[i].QuestaoAnexo.Count > 0)
                        {
                        <div class="field">
                            <label>Anexos</label>
                            @foreach (var anexo in lstQuestao[i].QuestaoAnexo)
                            {
                               @Html.Partial("_AnexoImpressao", anexo);
                            }
                        </div>
                        }
                    </div>
                }
            </div>
        </div>

        <div class="ui vertical inverted segment">
            <h5 class="ui centered header">&copy; SIAC - Sistema Interativo de Avaliação de Conhecimento</h5>
        </div>

    @Scripts.Render("~/bundles/js")
    <script>
        $('.ui.checkbox')
                .checkbox()
        ;
        var focused = false;
        window.print();
        focused = true;
        var interval = setInterval(function () {
            if (focused === true) {
                clearInterval(interval);
                window.location.href = "@Url.Action("Detalhe", "Autoavaliacao", new { codigo = Model.Avaliacao.CodAvaliacao })"
            }
        }, 300);
    </script>
</body>
</html>