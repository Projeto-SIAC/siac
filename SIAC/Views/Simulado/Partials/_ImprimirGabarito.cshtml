@model SimProva

@{
    List<Questao> questoes = Model.SimProvaQuestao.Select(p => p.Questao).OrderBy(q => q.CodQuestao).ToList();
    int pontoDeQuebra = questoes.Count <= 15 ? 15 : questoes.Count / 2 <= 15 ? questoes.Count / 2 : questoes.Count / 4;
}

<!DOCTYPE html>

<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>Gabarito - SIAC Simulados</title>
    <link href="~/Resources/images/layout/logo-black.png" rel="shortcut icon" />
    @Styles.Render("~/bundles/css")
    <style>
        html, body {
            font-size: 12px;
        }

        table > thead > tr > th {
            text-transform: uppercase;
        }

        table td, table th {
            padding: 0.35em 0.2em !important;
        }

            table td.collapsing {
                font-weight: bolder;
            }

        .gabarito.list .item {
            height: 18px;
            width: 18px;
            font-size: 10px !important;
            /*line-height: 12px;*/
            margin-left: 0.2em !important;
            text-align: center !important;
            border-radius: 50%;
            border: 1px black solid;
        }

            .gabarito.list .item.correta {
                color: white !important;
                background-color: black !important;
            }
    </style>
</head>
<body>
    <h2>
        GABARITO
        <small style="float:right">
            Dia: @Model.SimDiaRealizacao.DtRealizacao.DiaRealizacaoRepresentacao()
            &nbsp;|&nbsp;
            Prova: @Model.Titulo
        </small>
    </h2>
    <div class="ui divider"></div>
    <div class="ui grid">
        <div class="doubling four column row">
            <div class="column">
                <table class="ui striped celled table">
                    <thead>
                        <tr>
                            <th colspan="2">
                                Questão/Alternativas
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in questoes.Take(pontoDeQuebra).Select((questao, i) => new { i, questao }))
                        {
                            <tr>
                                <td class="right aligned collapsing">
                                    @item.i.GetIndiceQuestao()
                                </td>
                                <td>
                                    <div class="ui gabarito horizontal list">
                                        @foreach (var alternativa in item.questao.Alternativa.OrderBy(a => a.CodOrdem))
                                        {
                                            <div class="@(alternativa.FlagGabarito ? "correta" : "") item">@alternativa.CodOrdem.GetIndiceAlternativa()</div>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="column">
                <table class="ui celled table">
                    <thead>
                        <tr>
                            <th colspan="2">
                                Questão/Alternativas
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in questoes.Skip(pontoDeQuebra).Take(pontoDeQuebra).Select((questao, i) => new { i = i + pontoDeQuebra, questao }))
                        {
                            <tr>
                                <td class="right aligned collapsing">
                                    @item.i.GetIndiceQuestao()
                                </td>
                                <td>
                                    <div class="ui gabarito horizontal list">
                                        @foreach (var alternativa in item.questao.Alternativa.OrderBy(a => a.CodOrdem))
                                        {
                                            <div class="@(alternativa.FlagGabarito ? "correta" : "") item">@alternativa.CodOrdem.GetIndiceAlternativa()</div>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="column">
                <table class="ui celled table">
                    <thead>
                        <tr>
                            <th colspan="2">
                                Questão/Alternativas
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in questoes.Skip(pontoDeQuebra * 2).Take(pontoDeQuebra).Select((questao, i) => new { i = i + (pontoDeQuebra * 2), questao }))
                        {
                            <tr>
                                <td class="right aligned collapsing">
                                    @item.i.GetIndiceQuestao()
                                </td>
                                <td>
                                    <div class="ui gabarito horizontal list">
                                        @foreach (var alternativa in item.questao.Alternativa.OrderBy(a => a.CodOrdem))
                                        {
                                            <div class="@(alternativa.FlagGabarito ? "correta" : "") item">@alternativa.CodOrdem.GetIndiceAlternativa()</div>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            <div class="column">
                <table class="ui celled table">
                    <thead>
                        <tr>
                            <th colspan="2">
                                Questão/Alternativas
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in questoes.Skip(pontoDeQuebra * 3).Take(pontoDeQuebra).Select((questao, i) => new { i = i + (pontoDeQuebra * 3), questao }))
                        {
                            <tr>
                                <td class="right aligned collapsing">
                                    @item.i.GetIndiceQuestao()
                                </td>
                                <td>
                                    <div class="ui gabarito horizontal list">
                                        @foreach (var alternativa in item.questao.Alternativa.OrderBy(a => a.CodOrdem))
                                        {
                                            <div class="@(alternativa.FlagGabarito ? "correta" : "") item">@alternativa.CodOrdem.GetIndiceAlternativa()</div>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <script>
        var focused = false;
        window.print();
        focused = true;
        var interval = setInterval(function () {
            if (focused === true) {
                clearInterval(interval);
                window.close();
            }
        }, 300);
    </script>
</body>
</html>