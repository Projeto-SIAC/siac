@*
This file is part of SIAC.

Copyright (C) 2016 Felipe Mateus Freire Pontes <felipemfpontes@gmail.com>
Copyright (C) 2016 Francisco Bento da Silva Júnior <francisco.bento.jr@hotmail.com>

SIAC is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
*@
@model List<Questao>

@{ 
    int pontoDeQuebra = Model.Count <= 15 ? 15 : Model.Count / 2 <= 15 ? Model.Count / 2 : Model.Count / 4;
}

<div class="ui grid">
    <div class="doubling four column row">
        <div class="column">
            <table class="ui striped celled table">
                <thead>
                    <tr>
                        <th colspan="2">
                            Questão/Alternativas
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Take(pontoDeQuebra).Select((questao, i) => new { i, questao }))
                    {
                        <tr>
                            <td class="right aligned collapsing">
                                @item.i.GetIndiceQuestao()
                            </td>
                            <td>
                                <div class="ui gabarito horizontal list">
                                    @foreach (var alternativa in item.questao.Alternativa.OrderBy(a => a.CodOrdem))
                                    {
                                        <div class="item">@alternativa.CodOrdem.GetIndiceAlternativa()</div>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="column">
            <table class="ui celled table">
                <thead>
                    <tr>
                        <th colspan="2">
                            Questão/Alternativas
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Skip(pontoDeQuebra).Take(pontoDeQuebra).Select((questao, i) => new { i = i + pontoDeQuebra, questao }))
                    {
                        <tr>
                            <td class="right aligned collapsing">
                                @item.i.GetIndiceQuestao()
                            </td>
                            <td>
                                <div class="ui gabarito horizontal list">
                                    @foreach (var alternativa in item.questao.Alternativa.OrderBy(a => a.CodOrdem))
                                    {
                                        <div class="item">@alternativa.CodOrdem.GetIndiceAlternativa()</div>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="column">
            <table class="ui celled table">
                <thead>
                    <tr>
                        <th colspan="2">
                            Questão/Alternativas
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Skip(pontoDeQuebra * 2).Take(pontoDeQuebra).Select((questao, i) => new { i = i + (pontoDeQuebra * 2), questao }))
                    {
                        <tr>
                            <td class="right aligned collapsing">
                                @item.i.GetIndiceQuestao()
                            </td>
                            <td>
                                <div class="ui gabarito horizontal list">
                                    @foreach (var alternativa in item.questao.Alternativa.OrderBy(a => a.CodOrdem))
                                    {
                                        <div class="item">@alternativa.CodOrdem.GetIndiceAlternativa()</div>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="column">
            <table class="ui celled table">
                <thead>
                    <tr>
                        <th colspan="2">
                            Questão/Alternativas
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Skip(pontoDeQuebra * 3).Take(pontoDeQuebra).Select((questao, i) => new { i = i + (pontoDeQuebra * 3), questao }))
                    {
                        <tr>
                            <td class="right aligned collapsing">
                                @item.i.GetIndiceQuestao()
                            </td>
                            <td>
                                <div class="ui gabarito horizontal list">
                                    @foreach (var alternativa in item.questao.Alternativa.OrderBy(a => a.CodOrdem))
                                    {
                                        <div class="item">@alternativa.CodOrdem.GetIndiceAlternativa()</div>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

