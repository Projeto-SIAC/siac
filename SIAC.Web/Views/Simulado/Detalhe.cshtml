@model Simulado
@{
    ViewBag.Title = "Detalhe do Simulado";
    int? vagasSimulado = Model.QteVagas;
    int? capacidadeSelecionada = Model.SimSala.Sum(s => s.Sala.Capacidade);
}

<h2>
    @ViewBag.Title
    @if (Model.FlagSimuladoEncerrado)
    {
        <span class="ui label"><i class="lock icon"></i>Encerrado</span>
    }
    else if (Model.DtTerminoInscricao < DateTime.Now)
    {
        <span class="ui label"><i class="remove user icon"></i>Inscrições Encerradas</span>
    }
    else if (Model.DtInicioInscricao <= DateTime.Now)
    {
        <span class="ui label"><i class="add user icon"></i>Inscrições Abertas</span>
    }
    else
    {
        <span class="ui label"><i class="wait icon"></i>Gerado</span>
    }
    @if (!Model.FlagSimuladoEncerrado)
    {
        <div class="ui right floated floating dropdown labeled icon button">
            <i class="dropdown icon"></i>
            <span class="text">Ações para este simulado</span>
            <div class="menu">
                <div class="editar item">
                    <i class="edit icon"></i>
                    Editar Dados
                </div>
                <a href="@Url.Action("Provas", new { codigo = Model.Codigo })" class="item">
                    <i class="copy icon"></i>
                    Gerenciar Provas
                </a>
                <a href="@Url.Action("Datas", new { codigo = Model.Codigo })" class="item">
                    <i class="wait icon"></i>
                    Gerenciar Datas
                </a>
                <a href="@Url.Action("Salas", new { codigo = Model.Codigo })" class="item">
                    <i class="marker icon"></i>
                    Selecionar Salas
                </a>
                <div class="encerrar red inverted item">
                    <i class="warning sign red icon"></i>
                    Encerrar Simulado
                </div>
            </div>
        </div>
    }
</h2>

<form action="@Url.Action("Editar", new { codigo = Model.Codigo })" method="post" class="ui editar modal">
    <div class="header">Editar dados do simulado</div>
    <div class="content">
        <div class="ui form">
            <div class="field required">
                <label data-ajuda="Forneça na caixa abaixo o título">Forneça o título</label>
                <input id="txtTitulo" name="txtTitulo" value="@Model.Titulo" maxlength="250" placeholder="Título" />
            </div>
            <div class="field">
                <label data-ajuda="Descreva no espaço abaixo uma descrição para este simulado">Insira uma descrição</label>
                <textarea id="txtDescricao" name="txtDescricao" rows="5" placeholder="Descrição">@Model.Descricao</textarea>
            </div>
        </div>
    </div>
    <div class="actions">
        <div class="ui negative button">Voltar</div>
        <input type="submit" class="ui positive button" value="Editar" />
    </div>
</form>

<div class="ui encerrar modal">
    <i class="close icon"></i>
    <div class="header">
        Encerrar Simulado?
    </div>
    <div class="content">
        <div class="description">
            <p>Esta função encerrará o simulado e bloqueará a sua manutenção</p>
        </div>
    </div>
    <div class="actions">
        <div class="ui button">Cancelar</div>
        <div class="ui negative button">Encerrar Simulado</div>
    </div>
</div>

<div class="ui basic segment">
    <div class="ui dividing header">
        Detalhes
    </div>
    <table class="ui striped table">
        <tbody>
            <tr>
                <td><b>Titulo</b></td>
                <td>@Model.Titulo</td>
            </tr>
            @if (!String.IsNullOrWhiteSpace(Model.Descricao))
            {
                <tr>
                    <td><b>Descrição</b></td>
                    <td>@Model.Descricao</td>
                </tr>
            }
            <tr>
                <td><b>Coordenador</b></td>
                <td>@Model.Colaborador.Usuario.PessoaFisica.Nome</td>
            </tr>
            <tr>
                <td><b>Vagas</b></td>
                <td>@Model.QteVagas</td>
            </tr>
        </tbody>
    </table>
</div>

@if (Model.DtInicioInscricao != null)
{
    <div class="ui basic segment">
        <div class="ui dividing header">
            Prazo
        </div>
        <table class="ui striped table">
            <thead>
                <tr>
                    <th>Data de cadastro</th>
                    <th>Data de início das inscrições</th>
                    <th>Data de término das inscrições</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.DtCadastro.ToBrazilianString()</td>
                    <td>@Model.DtInicioInscricao.Value.ToString("dd/MM/yyyy")</td>
                    <td>@Model.DtTerminoInscricao.Value.ToString("dd/MM/yyyy")</td>
                </tr>
            </tbody>
        </table>
    </div>
}

@if (Model.SimDiaRealizacao.Count > 0)
{
    <div class="ui basic segment">
        <div class="ui dividing header">
            Provas
        </div>
        <div class="ui fluid accordion">
            @foreach (SimDiaRealizacao dia in Model.SimDiaRealizacao)
            {
            <div class="title">
                <i class="dropdown icon"></i>
                @dia.DtRealizacao.ToBrazilianString()
            </div>
            <div class="content">
                <table class="ui striped table">
                    <thead>
                        <tr>
                            <th>Título</th>
                            <th>Disciplina</th>
                            <th>Professor</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (SimProva prova in dia.SimProva)
                            {
                        <tr>
                            <td>@prova.Titulo</td>
                            <td>@prova.Disciplina.Descricao</td>
                            @if (prova.Professor != null)
                                    {
                                <td>provas[i].Professor.Usuario.PessoaFisica.PrimeiroNome</td>
                                    }
                                    else
                                    {
                                <td>Nâo Definido</td>
                                    }
                        </tr>
                            }
                    </tbody>
                </table>
            </div>
            }
        </div>
    </div>
}

@if (Model.SimSala.Count > 0)
{
    <div class="ui basic segment" style="max-height:30em">
        <div class="ui dividing header">
            Salas Selecionadas
            <div class="ui label">Vagas do Simulado<span class="detail">@vagasSimulado</span></div>
            <div class="ui @(vagasSimulado > capacidadeSelecionada ? "red": "green") label">Capacidade Selecionada<span class="detail">@capacidadeSelecionada</span></div>
        </div>
        <table class="ui striped table">
            <thead>
                <tr>
                    <th>Campus</th>
                    <th>Bloco</th>
                    <th>Sala</th>
                    <th>Sigla</th>
                    <th>Capacidade</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (SimSala simSala in Model.SimSala)
                {
                <tr>
                    <td data-content="@simSala.Sala.Bloco.Campus.PessoaJuridica.NomeFantasia">@simSala.Sala.Bloco.Campus.Sigla</td>
                    <td data-content="@simSala.Sala.Bloco.Descricao">@simSala.Sala.Bloco.Sigla</td>
                    <td>@simSala.Sala.Descricao</td>
                    <td>@simSala.Sala.Sigla</td>
                    <td>@simSala.Sala.Capacidade</td>
                </tr>
                }
            </tbody>
        </table>
    </div>
}

<a href="@Url.Action("","Gerencia")" class="ui button">Voltar para Histórico</a>


@section Scripts {
    @Scripts.Render("~/bundles/js/simulado")
}