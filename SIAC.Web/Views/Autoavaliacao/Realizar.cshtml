@using SIAC.Web.Models
@model AvalAuto
@{
    ViewBag.Title = "Realizar " + Model.Avaliacao.CodAvaliacao();
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Questao> lstQuestao = Model.Avaliacao.EmbaralharQuestao();
}

@section Scripts {
    <script>
        $('a[href]').on('click', function () { $('.ui.confirmar.modal').modal('show'); $('.ui.confirmar.modal #txtRef').val($(this).attr('href')); return false; });
        window.onbeforeunload = function(){
            return 'Você está realizando uma autoavaliação.';
        };
        $('.ui.checkbox')
            .checkbox()
        ;
        $('.ui.radio.checkbox')
            .checkbox()
        ;
        $('.ui.verificar.modal')
            .modal({
                closable: false,
                transition: 'vertical flip',
                blurring: true
            })
            .modal('show')
        ;
        $('.ui.cronometrar.modal')
            .modal({
                closable: false,
                onApprove: function () {
                    var date = new Date();
                    $('#lblHoraInicio').text(date.getHours() + 'h' + ("0" + (date.getMinutes())).slice(-2) + 'min');
                    if ($('#chkCronometrar').is(':checked')) {
                        // Não finalizado
                        var duracao = $('#txtDuracao').val();
                        date = new Date((duracao * 60 * 1000));
                        $('#lblHoraDuracao').text(date.getHours() + 'h' + ("0" + (date.getMinutes())).slice(-2) + 'min');
                    }
                    else {
                        $('#lblHoraDuracao').parent().remove();
                    }
                }
            })
            .modal('attach events', '.ui.verificar.modal .button')
        ;
        $('.ui.informacoes.modal')
            .modal()
        ;
        $('.ui.anexo.modal')
            .modal()
        ;
        $('.ui.confirmar.modal')
            .modal({
                onApprove: function () { window.location.href = $('.ui.confirmar.modal #txtRef').val(); },
                onDeny: function () { $('.ui.segment.loading').removeClass('loading');}
            })
        ;
        $('.ui.accordion')
            .accordion({ exclusive: false })
        ;
        function expandirImagem(card) {
            card = $(card);
            src = card.find('img').attr('src');
            legenda = card.find('.header').text();
            fonte = card.find('.description').text();
            modal = $('.ui.anexo.modal');

            modal.find('.header').text(legenda);
            modal.find('img.image').attr('src', src);
            modal.find('.description').html(fonte);

            modal.modal('show');
        }
        function gabarito(codQuestao, resposta, obj, multi) {
            $label = $('.ui.accordion').find('#txtCodQuestao[value="' + codQuestao + '"]').parent().find('.ui.label');
            if (resposta != '') {
                $label.removeClass('red');
                $label.removeAttr('style');
                $label.html('Respondida');
                if (obj) {
                    if (multi) {
                        $detail = $('<div class="detail"></div>');
                        $lstTitle = $('.ui.accordion > .title');
                        for (var i = 0; i < $lstTitle.length; i++) {
                            if ($lstTitle.eq(i).find('#txtCodQuestao').val() == codQuestao) {
                                $lstCheckbox = $lstTitle.eq(i).next().find('input[type="checkbox"]');
                                var ok = false;
                                for (var j = 0; j < $lstCheckbox.length; j++) {                                    
                                    if($lstCheckbox.eq(j).is(':checked')) {
                                        ok = true;
                                        $detail.append($lstCheckbox.eq(j).next().find('b').text());
                                    }                                    
                                }
                                if (!ok) {
                                    $label.attr('style', 'display:none')
                                }
                            }
                        }
                        $label.append($detail);
                    }
                    else {
                        $label.append($('<div class="detail"></div>').text(resposta));
                    }
                }
            }
            else {
                $label.attr('style', 'display:none')
            }
        }

        function submitForm() {
            var finalizada = true;
            var lstNaoRespondidas = [];
            $lstTitle = $('.ui.accordion > .title');
            for (var i = 0; i < $lstTitle.length; i++) {
                var codQuestao = $lstTitle.eq(i).find('#txtCodQuestao').val();
                var txtResposta = $lstTitle.eq(i).next().find('#txtResposta'+codQuestao).val();
                if (txtResposta == '') {       
                    finalizada = false;
                    lstNaoRespondidas.push(codQuestao);
                }
                else if (!txtResposta) {
                    var umaCorreta = $lstTitle.eq(i).next().find('#txtUmaCorreta'+codQuestao).val();
                    if (umaCorreta == 1) {
                        if (!$lstTitle.eq(i).next().find('input[name="rdoResposta'+codQuestao+'"]').is(':checked')) {
                            finalizada = false;                            
                            lstNaoRespondidas.push(codQuestao);
                        }
                    }
                    else {
                        var ok = false;
                        $lstCheckbox = $lstTitle.eq(i).next().find('input[type="checkbox"]');
                        for (var j = 0; j < $lstCheckbox.length; j++) {
                            if($lstCheckbox.eq(j).is(':checked')) {
                                ok = true;
                            }
                        }
                        if (!ok) {
                            finalizada = false;                            
                            lstNaoRespondidas.push(codQuestao);
                        }
                    }                    
                }
            }
            if (finalizada) {
                window.onbeforeunload = null;
                $('form').addClass('loading').submit();
            }
            else {
                for (var i = 0; i < lstNaoRespondidas.length; i++) {
                    for (var j = 0; j < $lstTitle.length; j++) {
                        if ($lstTitle.eq(j).find('#txtCodQuestao').val() == lstNaoRespondidas[i]) {
                            console.log($lstTitle.eq(i).find('.ui.label'));
                            $lstTitle.eq(j).find('.ui.label').removeAttr('style').addClass('red').html('Não respondida');
                        }
                    }
                }
            }
        }
    </script>
}

<h2>@ViewBag.Title <div class="ui right floated button" onclick="$('.ui.informacoes.modal').modal('show')">Informações</div></h2>

<div class="ui small confirmar modal">
    <div class="header">Você tem certeza?</div>
    <div class="content">
        <input id="txtRef" type="text" hidden />
        Você está deixando a página. Isso será considerado como <b>cancelamento</b> e você perderá todos os dados.
    </div>
    <div class="actions">
        <div class="ui cancel button">Voltar para avaliação</div>
        <div class="ui approve button">Deixar a página</div>
    </div>
</div>

<div class="ui verificar modal">
    <div class="header">Informações sobre autoavaliação</div>
    <div class="content">
        <table class="ui striped table">
            <thead>
                <tr>
                    <th>Disciplina</th>
                    <th>Tema(s)</th>
                    <th>Quantidade</th>
                    <th>Dificuldade</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var disc in Model.Avaliacao.AvaliacaoTema.Select(a => a.Tema.Disciplina).Distinct().ToList())
            {
                <tr>
                    <td>
                        @* disciplina *@
                        <b>@disc.Descricao</b>
                    </td>
                    <td class="ui labels">
                        @* temas *@
                        @foreach (var avalTema in Model.Avaliacao.AvaliacaoTema.Where(a => a.Tema.CodDisciplina == disc.CodDisciplina))
                            {
                            <div class="ui tag label">@avalTema.Tema.Descricao</div>
                            }
                    </td>
                    <td class="ui labels">
                        @* qte de questões *@
                        <div class="ui label">Objetiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 1)</div></div>
                        <div class="ui label">Discursiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 2)</div></div>
                    </td>
                    <td>
                        @* dificuldade *@
                        @Model.Avaliacao.AvaliacaoTema.ToList().MaxDificuldade(disc.CodDisciplina)
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="actions">
        <a href="/Dashboard" class="ui button">Voltar para Dashboard</a>
        <a href="/Historico/Autoavaliacao" class="ui button">Voltar para Histórico</a>
        <div class="ui button">Realizar</div>
    </div>
</div>

<div class="ui small cronometrar modal">
    <div class="content">
        <div class="ui form">
            <div class="field">
                <div class="ui checkbox">
                    <input id="chkCronometrar" type="checkbox" tabindex="0" class="hidden">
                    <label>Desejo cronometrar minha autoavaliação</label>
                </div>
            </div>
            <div class="inline field">
                <label>Duração (em minutos)</label>
                <input id="txtDuracao" type="number" value="60" />
            </div>
        </div>
    </div>
    <div class="actions">
        <div class="ui approve button">Iniciar</div>
    </div>
</div>

<div class="ui informacoes modal">
    <i class="icon close"></i>
    <div class="header">Informações sobre autoavaliação</div>
    <div class="content">
        <table class="ui striped table">
            <thead>
                <tr>
                    <th>Disciplina</th>
                    <th>Tema(s)</th>
                    <th>Quantidade</th>
                    <th>Dificuldade</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var disc in Model.Avaliacao.AvaliacaoTema.Select(a => a.Tema.Disciplina).Distinct().ToList())
            {
                <tr>
                    <td>
                        @* disciplina *@
                        <b>@disc.Descricao</b>
                    </td>
                    <td class="ui labels">
                        @* temas *@
                        @foreach (var avalTema in Model.Avaliacao.AvaliacaoTema.Where(a => a.Tema.CodDisciplina == disc.CodDisciplina))
                            {
                            <div class="ui tag label">@avalTema.Tema.Descricao</div>
                            }
                    </td>
                    <td class="ui labels">
                        @* qte de questões *@
                        <div class="ui label">Objetiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 1)</div></div>
                        <div class="ui label">Discursiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 2)</div></div>
                    </td>
                    <td>
                        @* dificuldade *@
                        @Model.Avaliacao.AvaliacaoTema.ToList().MaxDificuldade(disc.CodDisciplina)
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="ui anexo basic modal">
    <i class="close icon"></i>
    <div class="ui centered header"></div>
    <div class="image content">
        <img class="ui centered image">
    </div>
    <div class="description" style="text-align:center;"></div>
</div>

<div class="ui labels">
    <div class="ui label">
        Ínicio
        <div id="lblHoraInicio" class="detail">13h00min</div>
    </div>
    <div class="ui label">
        Duração
        <div id="lblHoraDuracao" class="detail">01h30min</div>
    </div>
    <div class="ui label">
        Restante
        <div id="lblHoraRestante" class="detail">00h47min</div>
    </div>
</div>
<br />
<form class="ui form" action="/Historico/Autoavaliacao/Resultado/@Model.Avaliacao.CodAvaliacao()" method="post">
    <div class="ui accordion">
        @for (int i = 0; i < lstQuestao.Count; i++)
        {
            <div class="title">
                <input id="txtCodQuestao" value="@lstQuestao[i].CodQuestao" hidden />
                <i class="dropdown icon"></i>@((i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).ToShortString(80))
                <div class="ui small label" style="display:none">Respondida</div>
            </div>
            <div class="content">
                <div class="ui segment">
                    <div class="ui dividing header" style="text-align:justify">
                        @{
                            var enunciado = (@i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).Split('\n', '\r');
                            foreach (var strEnunciado in enunciado)
                            {
                                if (!String.IsNullOrWhiteSpace(strEnunciado))
                                {
                                    <p>@strEnunciado</p>
                                }
                            }
                        }
                    </div>
                    @if (lstQuestao[i].CodTipoQuestao == 1)
                    {
                        var temUmaCorreta = lstQuestao[i].TemUmaCorreta();
                        <div class="grouped fields">
                            <input id="txtUmaCorreta@(lstQuestao[i].CodQuestao)" type="text" value="@(temUmaCorreta ? "1" : "0")" hidden />
                            <label>Selecione a@(!temUmaCorreta ? "s" : "") alternativa@(!temUmaCorreta ? "s" : "")</label>
                            @{ var lstAlternativa = lstQuestao[i].EmbaralharAlternativa(); }
                            @for (int j = 0; j < lstAlternativa.Count; j++)
                            {
                                <div class="field">
                                    <div class="ui @(temUmaCorreta ? "radio" : "") checkbox">
                                        <input onchange="gabarito(@lstQuestao[i].CodQuestao,'@j.GetIndiceAlternativa()', true@(!temUmaCorreta ? ", true":""))" type="@(temUmaCorreta ? "radio" : "checkbox")" name="@( temUmaCorreta ? "rdoResposta" + lstQuestao[i].CodQuestao : "chkResposta"+lstQuestao[i].CodQuestao+"Alternativa"+lstAlternativa[j].CodOrdem)" @(temUmaCorreta ? "value="+@lstAlternativa[j].CodOrdem+"" : "")>
                                        <label><b>@j.GetIndiceAlternativa()</b>) @lstAlternativa[j].Enunciado</label>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="field">
                            <label>Resposta</label>
                            <textarea onchange="gabarito(@lstQuestao[i].CodQuestao, $(this).val())" name="txtResposta@(lstQuestao[i].CodQuestao)" id="txtResposta@(lstQuestao[i].CodQuestao)" placeholder="Resposta..." rows="3"></textarea>
                        </div>
                    }
                    @if (lstQuestao[i].QuestaoAnexo.Count > 0)
                    {
                        <div class="accordion">
                            <div class="title"><i class="icon dropdown"></i>Anexos</div>
                            <div class="content">
                                @foreach (var anexo in lstQuestao[i].QuestaoAnexo)
                                {
                                    switch (anexo.CodTipoAnexo)
                                    {
                                        case 1:
                                            <a onclick="expandirImagem(this)" class="ui card">
                                                <div class="image">
                                                    <img src="data:image/png;base64,@Convert.ToBase64String(anexo.Anexo,0, anexo.Anexo.Length)" />
                                                </div>
                                                <div class="content">
                                                    <div class="header">
                                                        @anexo.Legenda
                                                    </div>
                                                    <div class="description">
                                                        @(!String.IsNullOrEmpty(anexo.Fonte) ? anexo.Fonte : "Fonte não informada")
                                                    </div>
                                                </div>
                                            </a>
                                            break;
                                        default:
                                            break;
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
                            }
    </div>
    <br />
    <div class="ui right floated button" onclick="submitForm()">Finalizar</div>
    <a href="/Dashboard/Autoavaliacao/Realizar" class="ui button">Cancelar</a>
</form>