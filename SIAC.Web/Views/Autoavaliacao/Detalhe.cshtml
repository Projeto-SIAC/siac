@model AutoavaliacaoDetalheViewModel

@{
    ViewBag.Title = "Detalhes de Autoavaliação";
    List<AvalQuesPessoaResposta> lstPessoaResposta = Model.Avaliacao.PessoaResposta;
    AvalPessoaResultado avalPessoaResultado = Model.Avaliacao.AvalPessoaResultado.FirstOrDefault();
}

<h2>
    @ViewBag.Title
    @if (Model.Avaliacao.FlagArquivo)
    {
        <div class="ui label">
            <i class="icon archive"></i>
            Arquivo
        </div>
    }
</h2>

<div class="ui info message @((Sessao.AjudaEstado)?"":"hidden")" data-ajuda-mensagem>
    <div class="header">
        Observações
    </div>
    <ul class="list">
        <li>Clique nos botões de cor <a class="ui small red label">Vermelha</a>, <a class=" ui small green label">Verde</a> e <a class="ui small blue label">Azul</a> para visualizar os comentários de cada questão.</li>
        <li>Pouse o mouse nas palavras <a class="ui small tag label">Correta</a> e <a class="ui small tag label">Marcada</a> para visualizar os comentários das questões.</li>
        @if (!Model.Avaliacao.FlagArquivo)
        {
            <li>O botão <b>Imprimir</b> serve para abrir a tela de impressão de avaliação onde você poderá imprimir sua avaliação e realiza-la tradicionalmente.</li>
            <li>O botão <b>Arquivar</b> serve para arquivar sua avaliação deixando-a em estado de espera para você tomar ações quando for de seu desejo.</li>
            <li>O botão <b>Realizar</b> serve para abrir a tela de realização de avaliação na qual você poderá iniciar sua avaliação.</li>
        }
        else
        {
            <li>O botão <b>Desarquivar</b> serve para retirar sua avaliação do estado de espera e então você terá mais opções de utilização desta avaliação.</li>
        }
    </ul>
</div>

<div class="ui basic segment">
    <div class="ui dividing header">
        Detalhes
    </div>
    <table class="ui striped table">
        <thead>
            <tr>
                <th>Disciplina</th>
                <th>Tema(s)</th>
                <th>Quantidade(s)</th>
                <th>Índice de Dificuldade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Disciplina disciplina in Model.Avaliacao.AvaliacaoTema.Select(a => a.Tema.Disciplina).Distinct().ToList())
            {
                <tr>
                    <td>
                        @* disciplina *@
                        <b>@disciplina.Descricao</b>
                    </td>
                    <td class="ui labels">
                        @* temas *@
                        @foreach (var avalTema in Model.Avaliacao.AvaliacaoTema.Where(a => a.Tema.CodDisciplina == disciplina.CodDisciplina))
                        {
                            <div class="ui tag label">@avalTema.Tema.Descricao</div>
                        }
                    </td>
                    <td class="ui labels">
                        @* qte de questões *@
                        <div class="ui label">Objetiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disciplina.CodDisciplina, TipoQuestao.OBJETIVA)</div></div>
                        <div class="ui label">Discursiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disciplina.CodDisciplina, TipoQuestao.DISCURSIVA)</div></div>
                    </td>
                    <td>
                        @* dificuldade *@
                        @Model.Avaliacao.AvaliacaoTema.ToList().MaxDificuldade(disciplina.CodDisciplina)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.Avaliacao.FlagRealizada)
{
    // Desempenho
    <div class="ui basic segment">
        <div class="ui dividing header" data-content="Note que os cálculos levem em conta somente as questões objetivas.">
            Desempenho
            <div class="ui label">
                Porcentagem de Acerto
                <div class="detail">
                    @(Model.Porcentagem.ToString("0.##'%'"))
                </div>
            </div>
            <div class="ui label">
                Quantidade de Acerto
                <div class="detail">
                    @avalPessoaResultado.QteAcertoObj
                </div>
            </div>
        </div>
        <div class="ui statistics">
            @foreach (string chave in Model.Desempenho.Keys)
            {
                <div class="statistic @(Model.Desempenho[chave]>50 ? "green" : "red")">
                    <div class="value">
                        @Model.Desempenho[chave].ToString("0.##'%'")
                    </div>
                    <div class="label">@chave</div>
                </div>
            }
        </div>
    </div>
    // Resultado
    <div class="ui basic segment">
        <div class="ui dividing header">
            Resultado
        </div>
        @foreach (string disciplina in Model.Avaliacao.AvalAuto.DicionarioDisciplinaQuestao.Keys)
        {
            List<Questao> lstQuestao = Model.Avaliacao.AvalAuto.DicionarioDisciplinaQuestao[disciplina];

            <h3>@disciplina</h3>
            <div class="ui accordion">
                @for (int i = 0; i < lstQuestao.Count; i++)
                {
                    AvalQuesPessoaResposta resposta = lstPessoaResposta.First(r => r.CodQuestao == lstQuestao[i].CodQuestao);

                    <div class="title">
                        <i class="dropdown icon"></i>@((i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).ToShortString(80))
                        @if (lstQuestao[i].CodTipoQuestao == TipoQuestao.OBJETIVA)
                        {
                            Alternativa correta = lstQuestao[i].Alternativa.Single(a => a.FlagGabarito.HasValue && a.FlagGabarito.Value);
                            <div class="ui @(resposta.RespAlternativa == correta.CodOrdem ? "green" : "red" ) label">@(resposta.RespAlternativa == correta.CodOrdem ? Html.Raw("<i class=\"checkmark icon\"></i>Correta") : Html.Raw("<i class=\"remove icon\"></i>Incorreta") )</div>
                        }
                        else
                        {
                            <div class="ui blue label"><i class="write icon"></i>Discursiva</div>
                        }
                    </div>
                    <div class="content">
                        <div class="ui segment">
                            <div class="ui dividing header" style="text-align:justify">
                                @Html.Raw((i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).ToHtml("p"))
                            </div>
                            @if (lstQuestao[i].CodTipoQuestao == TipoQuestao.OBJETIVA)
                            {
                                <div class="ui list">
                                    @foreach (Alternativa alternativa in lstQuestao[i].Alternativa)
                                    {
                                        <div class="item">
                                            <div class="middle aligned content">
                                                <b>@alternativa.CodOrdem.GetIndiceAlternativa()</b>) @alternativa.Enunciado
                                                @if (alternativa.FlagGabarito.HasValue && alternativa.FlagGabarito.Value)
                                                {
                                                    <a data-html="@("<b>Comentário</b>: " + (!String.IsNullOrWhiteSpace(alternativa.Comentario) ? alternativa.Comentario.Replace("\n", "<br>") : "Não existe comentário cadastrado pelo professor fornecedor."))" data-variation="very wide" class="ui tag label">Correta</a>
                                                }
                                                @if (alternativa.CodOrdem == resposta.RespAlternativa)
                                                {
                                                    <a data-html="@("<b>Comentário</b>: " + (!String.IsNullOrWhiteSpace(alternativa.Comentario) ? alternativa.Comentario.Replace("\n", "<br>") : "Não existe comentário cadastrado pelo professor fornecedor."))" data-variation="very wide" class="ui tag label">Marcada</a>
                                                }
                                            </div>
                                        </div>
                                    }
                                </div>
                            }
                            else
                            {
                                <div>
                                    <a class="ui ribbon label" data-html="@(("<b>Chave de Resposta</b>: " + lstQuestao[i].ChaveDeResposta).Replace("\n", "<br>"))" data-variation="very wide">Resposta</a>
                                    @Html.Raw(resposta.RespDiscursiva.ToHtml("p", "i"))
                                </div>
                            }
                            @if (lstQuestao[i].QuestaoAnexo.Count > 0)
                            {
                                <div class="accordion">
                                    <div class="title"><i class="icon dropdown"></i>Anexos</div>
                                    <div class="content">
                                        @foreach (QuestaoAnexo anexo in lstQuestao[i].QuestaoAnexo)
                                        {
                                            @Html.Partial("_Anexo", anexo)
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        }
    </div>
}
<a class="ui button" href="@Url.Action("Index", "Principal")">Voltar para Tela Principal</a>
@if (!Model.Avaliacao.FlagRealizada)
{
    if (!Model.Avaliacao.FlagArquivo)
    {
        <a href="@Url.Action("Avaliacao","Impressao", new { codigo = Model.Avaliacao.CodAvaliacao })" class="ui button">Imprimir</a>
        <div class="ui arquivar button">Arquivar</div>
        <a href="@Url.Action("Realizar", new { codigo = Model.Avaliacao.CodAvaliacao })" class="ui button">Realizar</a>
    }
    else
    {
        <div class="ui arquivar button">Desarquivar</div>
    }
}
<a class="ui right floated button" href="@Url.Action("Index")">Ir para Tela de Histórico</a>

@section Scripts {
    @Scripts.Render("~/bundles/js/autoavaliacao")
}