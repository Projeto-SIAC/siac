@using SIAC.Web.Models
@model AvalAuto

@{
    ViewBag.Title = "Autoavaliação " + Model.Avaliacao.CodAvaliacao;
    Layout = "~/Views/Shared/_Layout.cshtml";
    List<Questao> lstQuestao = Model.Avaliacao.Questao;
    List<AvalQuesPessoaResposta> lstPessoaResposta = Model.Avaliacao.PessoaResposta;
}

@section Scripts {
    <script>
        $('.ui.accordion').accordion({ animateChildren: false });
        $('.label, div').popup();

        function Arquivar() {
            $.ajax({
                type: 'POST',
                data: { codigo: '@Model.Avaliacao.CodAvaliacao' },
                url: "/Dashboard/Autoavaliacao/Arquivar",
                success: function () {
                    window.location.href = '/Historico/Autoavaliacao/Detalhe/@Model.Avaliacao.CodAvaliacao';
                },
                error: function () {
                    siac.mensagem('Não foi possível arquivar a autoavaliação.')
                }
            });
        }
    </script>
}

<h2>@ViewBag.Title@if (Model.Avaliacao.FlagArquivo) { <div class="ui label"><i class="icon archive"></i>Arquivo</div> }</h2>

<div class="ui basic segment">
    <div class="ui dividing header">
        Detalhes
    </div>
    <table class="ui striped table">
        <thead>
            <tr>
                <th>Disciplina</th>
                <th>Tema(s)</th>
                <th>Quantidade</th>
                <th>Dificuldade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var disc in Model.Avaliacao.AvaliacaoTema.Select(a => a.Tema.Disciplina).Distinct().ToList())
            {
                <tr>
                    <td>
                        @* disciplina *@
                        <b>@disc.Descricao</b>
                    </td>
                    <td class="ui labels">
                        @* temas *@
                        @foreach (var avalTema in Model.Avaliacao.AvaliacaoTema.Where(a => a.Tema.CodDisciplina == disc.CodDisciplina))
                        {
                            <div class="ui tag label">@avalTema.Tema.Descricao</div>
                        }
                    </td>
                    <td class="ui labels">
                        @* qte de questões *@
                        <div class="ui label">Objetiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 1)</div></div>
                        <div class="ui label">Discursiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 2)</div></div>
                    </td>
                    <td>
                        @* dificuldade *@
                        @Model.Avaliacao.AvaliacaoTema.ToList().MaxDificuldade(disc.CodDisciplina)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.Avaliacao.AvalPessoaResultado.Count == 0)
{
    <a onclick="window.open('/Dashboard/Autoavaliacao/Imprimir/@Model.Avaliacao.CodAvaliacao', '_blank');" class="ui button">Imprimir</a>
    if (!Model.Avaliacao.FlagArquivo)
    {
        <div onclick="Arquivar()" class="ui button">Arquivar</div>
        <a href="/Dashboard/Autoavaliacao/Realizar/@Model.Avaliacao.CodAvaliacao" class="ui button">Realizar agora</a>
    }
    else
    {
        <div onclick="Arquivar()" class="ui button">Desarquivar</div>
    }
}
else
{
    // Desempenho
    <div class="ui basic segment">
        <div class="ui dividing header" data-content="Note que os cálculos levem em conta somente as questões objetivas.">
            Desempenho
            <div class="ui label">Porcentagem de Acerto<div class="detail">@(ViewBag.Porcentagem.ToString("0.##'%'"))</div></div>
        </div>
        <div class="ui centered statistics">
            @foreach (var key in ViewBag.Desempenho.Keys)
            {
                <div class="statistic @(ViewBag.Desempenho[key]>50 ? "green" : "red")">
                        <div class="value circular" style="border:1px">
                            @ViewBag.Desempenho[key].ToString("0.##'%'")
                        </div>
                        <div class="label">@key</div>
                </div>
            }
        </div>
    </div>
    // Resultado
    <div class="ui basic segment">
        <div class="ui dividing header">
            Resultado
        </div>
        <div class="ui accordion">
            @for (int i = 0; i < lstQuestao.Count; i++)
            {
                var resposta = lstPessoaResposta.First(r => r.CodQuestao == lstQuestao[i].CodQuestao);
                
                <div class="title">
                    <i class="dropdown icon"></i>@((i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).ToShortString(80))
                    @if (lstQuestao[i].CodTipoQuestao == 1)
                    {
                        var correta = lstQuestao[i].Alternativa.Single(a => a.FlagGabarito.HasValue && a.FlagGabarito.Value);
                        <div class="ui @(resposta.RespAlternativa == correta.CodOrdem ? "green" : "red" ) label">@(resposta.RespAlternativa == correta.CodOrdem ? Html.Raw("<i class=\"checkmark icon\"></i>Correta") : Html.Raw("<i class=\"remove icon\"></i>Incorreta") )</div>
                    }
                </div>
                <div class="content">
                    <div class="ui segment">
                        <div class="ui dividing header" style="text-align:justify">
                            @{
                                var enunciado = (@i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).Split('\n', '\r');
                                foreach (var strEnunciado in enunciado)
                                {
                                    if (!String.IsNullOrWhiteSpace(strEnunciado))
                                    {
                                        <p>@strEnunciado</p>
                                    }
                                }
                            }
                        </div>
                        @if (lstQuestao[i].CodTipoQuestao == 1)
                    {
                            <div class="ui list">
                                @foreach (var alternativa in lstQuestao[i].Alternativa)
                                {
                                    <div class="item">
                                        <div class="middle aligned content">
                                            <b>@alternativa.CodOrdem.GetIndiceAlternativa()</b>) @alternativa.Enunciado
                                            @if (alternativa.FlagGabarito.HasValue && alternativa.FlagGabarito.Value)
                                            {
                                                <a data-html="@((""+alternativa.Comentario).Replace("\n","<br>"))" data-variation="very wide" class="ui tag label">Correta</a>
                                            }
                                            @if (alternativa.CodOrdem == resposta.RespAlternativa)
                                            {
                                                <a data-html="@((""+alternativa.Comentario).Replace("\n","<br>"))" data-variation="very wide" class="ui tag label">Marcada</a>
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        }
                        else
                        {
                            <div>
                                <a class="ui ribbon label" data-html="@lstQuestao[i].ChaveDeResposta.Replace("\n","<br>")" data-variation="very wide">Resposta</a>
                                @{
                                    var respDiscursiva = resposta.RespDiscursiva.Split('\n', '\r');
                                    foreach (var strRespDiscursiva in respDiscursiva)
                                    {
                                        if (!String.IsNullOrWhiteSpace(strRespDiscursiva))
                                        {
                                            <p><i>@strRespDiscursiva</i></p>
                                        }
                                    }
                                }
                            </div>
                                    }
                        @if (lstQuestao[i].QuestaoAnexo.Count > 0)
                    {
                            <div class="accordion">
                                <div class="title"><i class="icon dropdown"></i>Anexos</div>
                                <div class="content">
                                    @foreach (var anexo in lstQuestao[i].QuestaoAnexo)
                                    {
                                        switch (anexo.CodTipoAnexo)
                                        {
                                            case 1:
                                                <a onclick="expandirImagem(this)" class="ui card">
                                                    <div class="image">
                                                        <img src="data:image/png;base64,@Convert.ToBase64String(anexo.Anexo,0, anexo.Anexo.Length)" />
                                                    </div>
                                                    <div class="content">
                                                        <div class="header">
                                                            @anexo.Legenda
                                                        </div>
                                                        <div class="description">
                                                            @(!String.IsNullOrEmpty(anexo.Fonte) ? anexo.Fonte.ToShortString(30): "Fonte não informada")
                                                        </div>
                                                    </div>
                                                </a>
                                                break;
                                            default:
                                                break;
                                        }
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>        
    </div>
}
