@model AvalAvi

@{
    ViewBag.Title = Model.Titulo;
    Layout = null;
    
    int indMod = 1;
    int indCat = 1;
    int indInd = 1;
    int indQue = 1;
}
<html lang="pt-br">
<head>
    <meta charset="utf-8" />
    <title>@ViewBag.Title - SIAC</title>
    <link href="~/Resources/images/layout/logo-black.png" rel="shortcut icon" />
    @Styles.Render("~/bundles/css")
    <style>
        @@media print {
            div.parentPublico , div.parentModulo {
                page-break-before: always;
            }

            div.questao{
                page-break-inside: avoid;
            }

                div.questao > :first-child {
                    padding-top: unset;
                    page-break-inside: avoid;
                }

                div.questao .ui.header {
                    font-size: 1em;
                }
        }
    </style>
</head>
<body>
    <div class="ui text content">
        <h2>@ViewBag.Title</h2>
    </div>
    <div class="ui vertical segment">
        <div class="ui header dividing">
            Cabeçalho
        </div>
        <table class="ui very basic celled table">
            <tbody>
                <tr>
                    <td class="two wide">
                        <b>Instituição</b>
                    </td>
                    <td class="fourteen wide">
                        @Model.Colaborador.Usuario.PessoaFisica.PessoaLocalTrabalho.Instituicao.PessoaJuridica.NomeFantasia
                    </td>
                </tr>
                <tr>
                    <td>
                        <b>Coordenador</b>
                    </td>
                    <td>
                        @Model.Colaborador.Usuario.PessoaFisica.Nome
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    <div class="ui vertical segment">
        <div class="ui header dividing">
            Informações
        </div>
        <table class="ui striped table">
            <tbody>
                <tr>
                    <td><b>Código</b></td>
                    <td>@Model.Avaliacao.CodAvaliacao</td>
                </tr>
                <tr>
                    <td><b>Título</b></td>
                    <td>@Model.Titulo</td>
                </tr>
                <tr>
                    <td><b>Objetivo</b></td>
                    <td>@Html.Raw(Model.Objetivo.ToHtml("p"))</td>
                </tr>
                <tr>
                    <td><b>Coordenador</b></td>
                    <td>@Model.Colaborador.Usuario.PessoaFisica.Nome</td>
                </tr>
            </tbody>
        </table>
        @* Prazo *@
        @if (Model.FlagAgendada)
        {
        <div class="ui header dividing">
            Prazo
        </div>
        <table class="ui striped table">
            <thead>
                <tr>
                    <th>Data de Início</th>
                    <th>Data de Término</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.Avaliacao.DtAplicacao.Value.ToShortDateString()</td>
                    <td>@Model.DtTermino.Value.ToShortDateString()</td>
                </tr>
            </tbody>
        </table>
        }
        @* Público *@
        @if (Model.FlagPublico)
        {
        <div class="parentPublico">
            <div class="ui header dividing">
                Público
            </div>
            <table class="ui striped table">
                <tbody>
                    @foreach (AviPublico publico in Model.AviPublico)
                        {
                        <tr>
                            <td>@publico.Descricao</td>
                            <td><a class="ui label">@publico.AviTipoPublico.Descricao</a></td>
                        </tr>
                        }
                </tbody>
            </table>
        </div>
        }
    </div>

    <div class="ui form">
        @foreach (MapAviModulo modulo in Model.MapQuestoes)
        {
            <div class="parentModulo">
                <h3 class="ui header">@modulo.Modulo.Descricao.Sumarizada(indMod)</h3>
                @foreach (MapAviCategoria categoria in modulo.Categorias)
                {
                <div class="parentCategoria">
                    <h4 class="ui header">@categoria.Categoria.Descricao.Sumarizada(indMod,indCat)</h4>
                    @foreach (MapAviIndicador indicador in categoria.Indicadores)
                    {
                        <div class="parentIndicador">
                            <h5 class="ui header">@indicador.Indicador.Descricao.Sumarizada(indMod,indCat,indInd)</h5>
                            @foreach (AviQuestao questao in indicador.Questoes)
                            {
                                <div class="questao">
                                    <div class="ui basic segment" data-questao="@questao.CodOrdem">
                                        <h4 class="ui dividing header" data-content="@questao.Observacao">
                                            @questao.Enunciado.Replace(Environment.NewLine, "</br>").Sumarizada(indMod,indCat,indInd,indQue)
                                        </h4>
                                        @if (questao.FlagDiscursiva.HasValue && questao.FlagDiscursiva.Value)
                                        {
                                            <div class="field">
                                                <label>Respostas</label>    
                                                @if (questao.Respostas.Count > 0)
                                                {
                                                    foreach (AviQuestaoPessoaResposta resposta in questao.Respostas)
                                                    {
                                                    <p><i>"@resposta.RespDiscursiva"</i></p>
                                                    }
                                                }
                                                else
                                                {
                                                    <b>Nenhuma resposta cadastrada</b>
                                                }
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="ui stackable grid">
                                                <div class="eleven wide column">
                                                    <div class="ui relaxed list">
                                                        @foreach (AviQuestaoAlternativa alternativa in questao.AviQuestaoAlternativa)
                                                        {
                                                            if (!alternativa.FlagAlternativaDiscursiva)
                                                            {
                                                                <div class="item"><b>@((alternativa.CodAlternativa - 1).GetIndiceAlternativa())</b>) @alternativa.Enunciado @*<span class="ui label">@questao.Respostas.Where(pr => pr.RespAlternativa == alternativa.CodAlternativa).Count() Marcado(s)</span>*@</div>
                                                            }
                                                            else
                                                            {
                                                                <label><b>@((alternativa.CodAlternativa - 1).GetIndiceAlternativa())</b>) @alternativa.Enunciado <span class="ui label">Alternativa Discursiva</span></label>
                                                                <div class="field">
                                                                    <label>Respostas</label>
                                                                    @foreach (AviQuestaoPessoaResposta resposta in questao.Respostas)
                                                                    {
                                                                        if (!String.IsNullOrEmpty(resposta.RespDiscursiva))
                                                                        {
                                                                            <p><i>"@resposta.RespDiscursiva"</i></p>
                                                                        }
                                                                    }
                                                                </div>
                                                            }
                                                        }
                                                    </div>
                                                </div>
                                                <div class="five wide column">
                                                    <table style="border: none !important;" class="ui basic table">
                                                        @*Gráficos das Alternativas*@
                                                    </table>
                                                </div>
                                            </div>
                                            <code class="dados" hidden>@Html.Raw(questao.ToJsonChart())</code>
                                        }
                                    </div>
                                </div>
                                indQue++;
                            }
                        </div>
                        indQue = 1;
                        indInd++;
                    }
                </div>
                indInd = 1;
                indCat++;
                }
            </div>
            indCat = 1; indMod++;
                        
        }
    </div>

    <div class="ui vertical inverted segment">
        <h5 class="ui centered header">&copy; SIAC - Sistema Interativo de Avaliação de Conhecimento</h5>
    </div>

    @Scripts.Render("~/bundles/js", "~/bundles/chart")
    <script>
        function mostrarGraficos() {
            var contador = 1;
            var graficos = $('body').find('.five.wide.column').length;
            $('body').find('.five.wide.column').map(function () {
                $content = $(this);
                if ($content){
                    var data = JSON.parse($content.parents('[data-questao]').find('code.dados').html());
                    adicionarValoresAlternativas($content, data);
                }
            })
        };
        function adicionarValoresAlternativas($content,data)
        {
            var total = 0;
            for (var i = 0; i < data.length; i++) {
                total += parseInt(data[i].value);
            }
            $div = $content.find('table');
            for (var i = 0; i < data.length; i++) {
                var alternativa = data[i].label;
                var valor = data[i].value;
                if (valor > 0) {
                    var $barra = $(
                        '<tr><td>'+
                            '<div style="position:relative;">' +
                                '<canvas width="180" height="20" style="position: absolute; border:1px solid #ccc;">' +
                                    'Seu browser não suporta a tag canvas do HTML5.' +
                                '</canvas>' +
                                '<label style="position:absolute;margin: 2px 5px;">' + ((valor / total) * 100).toFixed(2) + '%</label>' +
                            '</div></td></tr><tr><td>' +
                            '<b>'+alternativa+'</b></td>'+
                        '</tr>');
                    $barra.find('td').map(function () {
                        $(this).css('border', 'none', 'important');
                    });

                    $div.append($barra);

                    var ctx = $barra.find('canvas').get(0).getContext("2d");
                    ctx.fillStyle = "#ccc";
                    ctx.fillRect(0, 0, ((valor / total) * 200), 20);
                }
            }
        }
        mostrarGraficos();
        var focused = false;
        window.print();
        focused = true;
        var interval = setInterval(function () {
            if (focused === true) {
                clearInterval(interval);
                window.location.href = "@Url.Action("Resultado", "Institucional", new { codigo = Model.Avaliacao.CodAvaliacao })"
            }
        }, 300);
    </script>
</body>
</html>