@model AvalAcademica
@{
    ViewBag.Title = "Corrigir Avaliação Acadêmica";
    List<Questao> questoes = Model.Avaliacao.Questao.OrderBy(q => q.CodQuestao).ToList();
}

<code class="questoes" hidden>
    {
    @for (int i = 0, length = questoes.Count; i < length; i++)
    {
    <text>
        "@questoes[i].CodQuestao":"@i.GetIndiceQuestao()"
        @if (i < (length-1))
        {
            @:,
        }
    </text>
    }
    }
</code>

<h2>
    @ViewBag.Title
    <div class="ui right floated button corrigir">Corrigir</div>
    <div class="ui right floated button informacoes">Informações</div>
    @if(Model.AlunoSemJustificacao.Count > 0 || Model.Justificacoes.Count > 0) {
        <a href="@Url.Action("Justificar", "Reposicao", new { codigo = Model.Avaliacao.CodAvaliacao })" class="ui right floated reposicao button">Reposição</a>
    }
</h2>

<div class="ui info message @((Sessao.AjudaEstado)?"":"hidden")" data-ajuda-mensagem>
    <div class="header">
        Ajuda
    </div>
    <ul class="list">
        <li>Aqui em corrigir você poderá dar valores às respostas discursivas dos alunos que realizaram esta avaliação.</li>
        <li>O botão <b>Corrigir</b> serve para abrir a tela de seleção da questão/aluno à ser corrigido(a).</li>
        <li>No painel de Corrigir Avaliação preencha a <b>Nota Obtida</b> pelo aluno e o seu <b>Comentário de Correção</b> para cada questão.</li>
        <li>O botão <b>Salvar</b> serve para enviar a nota do aluno e seu comentário para ser salvo no sistema.</li>
        <li>O ícone <i class="checkmark icon"></i> indica que a resposta do aluno está <b>correta</b>.</li>
        <li>O ícone <i class="remove icon"></i> indica que a resposta do aluno está <b>errada</b>.</li>
        <li>O ícone <i class="write icon"></i> indica que a questão é <b>discursiva</b></li>
    </ul>
</div>

@Html.Partial("_AvaliacaoInformacoes", Model.Avaliacao)

@* Placeholder da opção de Correção por Aluno *@
<div id="templateCorrecaoAluno" class="ui basic segment questoes aluno" hidden>
    <div id="{codQuestao}" class="ui fluid card">
        <div class="content">
            <div class="header">
                <p>{questaoIndice}. {questaoEnunciado}
            </div>
            <a class="ui tiny ribbon label">Chave de Resposta</a>
            <p><i>{questaoChaveResposta}</i></p>
        </div>
        <div class="segment">
            <table class="ui striped table">
                <thead>
                    <tr>
                        <th class="six wide">Resposta do Aluno</th>
                        <th class="two wide">Nota Obtida</th>
                        <th class="six wide">Comentário de Correção</th>
                        <th class="three wide"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>{alunoResposta}</td>
                        <td>
                            <div class="field required">
                                <input type="number" value="@Parametro.Obter().ValorNotaMedia.ToValueHtml()" min="0" step="0.1" max="10" class="notaObtida" />
                            </div>
                        </td>
                        <td>
                            <div class="field required">
                                <textarea class="correcaoComentario" rows="3">{correcaoComentario}</textarea>
                            </div>
                        </td>
                        <td>
                            <div class="ui button corrigir aluno">Salvar</div>
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="ui dimmer">
                <div class="content">
                    <div class="center">
                        <h2 class="ui inverted icon header">
                            <i class="checkmark icon"></i>
                            Questão Corrigida!
                        </h2>
                        <br />
                        <p class="detail">Clique para recorrigir</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* Placeholder da opção de Correção por Questão *@
<div id="templateCorrecaoQuestao" class="ui basic segment questoes aluno" hidden>
    <div id="{codQuestao}" class="ui fluid card">
        <div class="content">
            <div class="header">
                <p>{questaoIndice}. {questaoEnunciado}
            </div>
            <a class="ui tiny ribbon label">Chave de Resposta</a>
            <p><i>{questaoChaveResposta}</i></p>
        </div>
        <div class="segment">
            <table class="ui striped table">
                <thead>
                    <tr>
                        <th class="six wide">{alunoNome}</th>
                        <th class="two wide">Nota Obtida</th>
                        <th class="six wide">Comentário de Correção</th>
                        <th class="three wide"></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>{alunoResposta}</td>
                        <td>
                            <div class="field required">
                                <input type="number" value="@Parametro.Obter().ValorNotaMedia.ToValueHtml()" min="0" step="0.1" max="10" class="notaObtida" />
                            </div>
                        </td>
                        <td>
                            <div class="field required">
                                <textarea class="correcaoComentario" rows="3">{correcaoComentario}</textarea>
                            </div>
                        </td>
                        <td>
                            <div class="ui button corrigir aluno">Salvar</div>
                        </td>
                    </tr>
                </tbody>
            </table>
            <div class="ui dimmer">
                <div class="content">
                    <div class="center">
                        <h2 class="ui inverted small icon header">
                            <i class="checkmark icon"></i>
                            Questão Corrigida!
                        </h2>
                        <br />
                        <p class="detail">Clique para recorrigir</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="ui modal fullscreen corrigir">
    <i class="close icon"></i>
    <div class="header">
        Corrigir Avaliação
    </div>
    <div class="content">
        <form class="ui form">
            <div class="fields">
                <div class="four wide field required">
                    <label for="">Corrigir por...</label>
                    <select id="ddlCorrecaoModo" name="ddlCorrecaoModo" class="ui dropdown">
                        <option value="">Corrigir por...</option>
                        <option value="aluno">Aluno</option>
                        <option value="questao">Questão</option>
                    </select>
                </div>
                <div class="twelve wide field required">
                    <label for="">Selecione </label>
                    <select id="ddlCorrecaoValor" name="ddlCorrecaoValor" class="ui dropdown disabled" style="z-index:1005;"></select>
                </div>
            </div>
            <div class="correcao conteudo">
                
            </div>
        </form>
    </div>
</div>

<div class="ui basic segment">
    <div class="ui accordion">
        @foreach (Aluno aluno in Model.Alunos.OrderBy(a => a.Usuario.PessoaFisica.Nome))
        {
            IEnumerable<AvalQuesPessoaResposta> lstResposta = Model.Avaliacao.PessoaResposta.Where(p => p.CodPessoaFisica == aluno.Usuario.CodPessoaFisica);

            bool realizou = lstResposta.Count() != 0;

            <div id="@aluno.MatrAluno" class="title">
                <i class="dropdown icon" style="float:right"></i>
                <b class="nome">@aluno.Usuario.PessoaFisica.Nome</b> @aluno.MatrAluno
                @if (realizou)
                {
                    <div class="ui small label">Nota Parcial<div class="detail">@Model.Avaliacao.AvalPessoaResultado.Single(r=>r.CodPessoaFisica == aluno.Usuario.CodPessoaFisica).Nota.Value.ToString("0.0")</div></div>
                }
                else
                {
                    <div class="ui small label">Ausente</div>
                }
            </div>
            <div id="@aluno.MatrAluno" class="content">
                
                <table class="ui very basic table">
                    @{
                        int questaoIndice = 0;
                        int quantidadeColunas = 10;
                        int colunaIndice = 1;
                    }
                    
                    <tr>
                        @foreach (AvalQuesPessoaResposta resp in lstResposta.OrderBy(aqpr => aqpr.CodQuestao))
                        {
                            if (colunaIndice == quantidadeColunas)
                            {
                                @:</tr><tr>
                                colunaIndice = 1;
                            }
                            <td style="border:none!important;">
                                <a @((resp.AvalTemaQuestao.QuestaoTema.Questao.CodTipoQuestao == TipoQuestao.DISCURSIVA)? "data-questao="+resp.CodQuestao:"") class="ui label">
                                    @if (resp.RespAlternativa.HasValue) {
                                    <i class="@(resp.RespNota == 10 ? "checkmark green" : "remove red") icon"></i>
                                    }
                                    else
                                    {
                                        <i class="write icon"></i>
                                    }
                                    @questaoIndice.GetIndiceQuestao()
                                    @if (resp.RespAlternativa.HasValue)
                                    {
                                        if (resp.RespAlternativa.Value > -1)
                                        {
                                            <div class="detail">
                                                @resp.RespAlternativa.Value.GetIndiceAlternativa()
                                            </div>
                                        }
                                        else
                                        {
                                            <div class="detail">
                                                <i class="icon thumbs down"></i>
                                            </div>
                                        }
                                    }
                                    else if (String.IsNullOrWhiteSpace(resp.RespDiscursiva))
                                    {
                                        <div class="detail">
                                            <i class="icon thumbs down"></i>
                                        </div>
                                    }
                                </a>
                            </td>
                            questaoIndice+=1;
                            colunaIndice++;
                        }
                    </tr>
                </table>

            </div>
        }
    </div>
</div>

<a href="@Url.Action("Detalhe", new { codigo = Model.Avaliacao.CodAvaliacao})" class="ui button">Sair</a>


@section Scripts{
    @Scripts.Render("~/bundles/js/academica")
}