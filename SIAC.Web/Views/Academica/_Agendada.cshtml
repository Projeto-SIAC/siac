@using SIAC.Web.Models
@model AvalAcademica
<i class="icon close"></i>
<div class="header">@Model.Avaliacao.CodAvaliacao <div class="ui label">Restante <div class="detail">15min</div></div></div>
<div class="content">
    <div class="ui fluid styled accordion">
        <div class="active title"><i class="dropdown icon"></i>Detalhes</div>
        <div class="active content">
            <table class="ui striped table">
                <thead>
                    <tr>
                        <th>Disciplina</th>
                        <th>Tema(s)</th>
                        <th>Quantidade</th>
                        <th>Dificuldade</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var disc in Model.Avaliacao.AvaliacaoTema.Select(a => a.Tema.Disciplina).Distinct().ToList())
            {
        <tr>
            <td>
                @* disciplina *@
                <b>@disc.Descricao</b>
            </td>
            <td class="ui labels">
                @* temas *@
                @foreach (var avalTema in Model.Avaliacao.AvaliacaoTema.Where(a => a.Tema.CodDisciplina == disc.CodDisciplina))
                    {
                    <div class="ui tag label">@avalTema.Tema.Descricao</div>
                    }
            </td>
            <td class="ui labels">
                @* qte de questões *@
                <div class="ui label">Objetiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 1)</div></div>
                <div class="ui label">Discursiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 2)</div></div>
            </td>
            <td>
                @* dificuldade *@
                @Model.Avaliacao.AvaliacaoTema.ToList().MaxDificuldade(disc.CodDisciplina)
            </td>
        </tr>
        }
                </tbody>
            </table>
        </div>
        <div class="title"><i class="dropdown icon"></i>Agendamento</div>
        <div class="content">
            <table class="ui striped table">
                <thead>
                    <tr>
                        <th>Turma</th>
                        <th>Data</th>
                        <th>Horário</th>
                        <th>Sala</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            @* Turma *@
                            @Model.Turma.Curso.Descricao (@Model.Turma.CodTurma)
                        </td>
                        <td>
                            @* Data *@
                            @Model.Avaliacao.DtAplicacao.Value.ToString("ddd, dd/MM/yyyy")
                        </td>
                        <td>
                            @* Horário *@
                            Das @Model.Avaliacao.DtAplicacao.Value.ToShortTimeString() até @Model.Avaliacao.DtAplicacao.Value.AddMinutes(Model.Avaliacao.Duracao.Value).ToShortTimeString()
                        </td>
                        <td>
                            @* Sala *@
                            @Model.Sala.Descricao
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div class="title"><i class="dropdown icon"></i>Questões</div>
        <div class="content">
            <div class="ui one cards" style="max-height: 25em; overflow-y: auto">
                @{
                    int contador = 0;
                    foreach (Questao questao in Model.Avaliacao.Questao)
                    {
                        <div class="card">
                            <div class="content">
                                <div class="header" data-html="@( !String.IsNullOrEmpty(questao.Objetivo) ? "<b>Objetivo</b>: " + questao.Objetivo : "")">
                                    @{
                                        var enunciado = (contador.GetIndiceQuestao() + ". " + questao.Enunciado).Split('\n', '\r');
                                        foreach (var strEnunciado in enunciado)
                                        {
                                            if (!String.IsNullOrWhiteSpace(strEnunciado))
                                            {
                                                <p>@strEnunciado</p>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                            <div class="content">
                                @if (questao.CodTipoQuestao == 1)
                                {
                                    <div class="ui list">
                                        @foreach (var alternativa in questao.Alternativa)
                                        {
                                            <div class="item">
                                                <div class="middle aligned content" data-html="@(!String.IsNullOrEmpty(alternativa.Comentario) ? "<b>Comentário</b>: " + alternativa.Comentario : "")">
                                                    <b>@alternativa.CodOrdem.GetIndiceAlternativa()</b>) @alternativa.Enunciado
                                                    @if (alternativa.FlagGabarito.HasValue && alternativa.FlagGabarito.Value)
                                                    {
                                                        <a class="ui tiny green label">Correta</a>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div data-html="@(!String.IsNullOrEmpty(questao.Comentario) ? "<b>Comentário</b>: " + questao.Comentario : "")">
                                        <a class="ui tiny green ribbon label">Chave de Resposta</a>
                                        @{
                                            var chaveDeResposta = questao.ChaveDeResposta.Split('\n', '\r');
                                            foreach (var strChaveDeResposta in chaveDeResposta)
                                            {
                                                if (!String.IsNullOrWhiteSpace(strChaveDeResposta))
                                                {
                                                    <p><i>@strChaveDeResposta</i></p>
                                                }
                                            }
                                        }
                                    </div>
                                            }
                            </div>
                            @if (questao.QuestaoAnexo.Count > 0)
                {
                                <div class="extra content">
                                    <div class="ui styled fluid accordion">
                                        <div class="title"><i class="icon dropdown"></i>Anexos</div>
                                        <div class="content">
                                            @foreach (var anexo in questao.QuestaoAnexo)
                                            {
                                                switch (anexo.CodTipoAnexo)
                                                {
                                                    case 1:
                                                        <a class="ui card">
                                                            <div class="image">
                                                                <img src="data:image/png;base64,@Convert.ToBase64String(anexo.Anexo, 0, anexo.Anexo.Length)" />
                                                            </div>
                                                            <div class="content">
                                                                <div class="header">
                                                                    @anexo.Legenda
                                                                </div>
                                                                <div class="description">
                                                                    @(!String.IsNullOrEmpty(anexo.Fonte) ? anexo.Fonte : "Fonte não informada")
                                                                </div>
                                                            </div>
                                                        </a>
                                                        break;
                                                    default:
                                                        break;
                                                }
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                                                contador++;
                                            }
                }
            </div>
        </div>
    </div>
</div>
<div class="actions">
    <div class="ui cancel button">Fechar</div>
    <div class="ui button">Imprimir</div>
    <div class="ui button">Configurar</div>
    <div class="ui button">Liberar</div>
</div>