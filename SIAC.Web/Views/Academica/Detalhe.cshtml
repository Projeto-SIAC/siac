
@model SIAC.Models.AvalAcademica
@{
    ViewBag.Title = "Avaliação Acadêmica " + Model.Avaliacao.CodAvaliacao;
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<h2 data-avaliacao="@Model.Avaliacao.CodAvaliacao">@ViewBag.Title@if (Model.Avaliacao.AvalPessoaResultado.Count > 0)
{ <div class="ui label"><i class="icon checkmark"></i>Realizada</div> }</h2>

<div class="ui basic segment">
    <div class="ui dividing header">
        Detalhes
    </div>
    <table class="ui striped table">
        <thead>
            <tr>
                <th>Disciplina</th>
                <th>Tema(s)</th>
                <th>Quantidade</th>
                <th>Dificuldade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var disc in Model.Avaliacao.AvaliacaoTema.Select(a => a.Tema.Disciplina).Distinct().ToList())
            {
                <tr>
                    <td>
                        @* disciplina *@
                        <b>@disc.Descricao</b>
                    </td>
                    <td class="ui labels">
                        @* temas *@
                        @foreach (var avalTema in Model.Avaliacao.AvaliacaoTema.Where(a => a.Tema.CodDisciplina == disc.CodDisciplina))
                        {
                            <div class="ui tag label">@avalTema.Tema.Descricao</div>
                        }
                    </td>
                    <td class="ui labels">
                        @* qte de questões *@
                        <div class="ui label">Objetiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 1)</div></div>
                        <div class="ui label">Discursiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, 2)</div></div>
                    </td>
                    <td>
                        @* dificuldade *@
                        @Model.Avaliacao.AvaliacaoTema.ToList().MaxDificuldade(disc.CodDisciplina)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.NumTurma.HasValue)
{
    <div class="ui basic segment">
        <div class="ui dividing header">
            Agendamento
        </div>
        <table class="ui striped table">
            <thead>
                <tr>
                    <th>Turma</th>
                    <th>Data</th>
                    <th>Horário</th>
                    <th>Sala</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @* Turma *@
                        @Model.Turma.Curso.Descricao (@Model.Turma.CodTurma)
                    </td>
                    <td>
                        @* Data *@
                        @Model.Avaliacao.DtAplicacao.Value.ToShortDateString()
                    </td>
                    <td>
                        @* Horário *@
                        Das @Model.Avaliacao.DtAplicacao.Value.ToShortTimeString() até @Model.Avaliacao.DtAplicacao.Value.AddMinutes(Model.Avaliacao.Duracao.Value).ToShortTimeString()
                    </td>
                    <td>
                        @* Sala *@
                        @Model.Sala.Descricao
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}
else
{
    <a href="/Dashboard/Avaliacao/Academica/Agendar/@Model.Avaliacao.CodAvaliacao" class="ui button">Agendar</a>
}
<a href="/Historico/Avaliacao/Academica" class="ui button">Histórico</a>
@if (Model.Avaliacao.FlagArquivo || Model.Avaliacao.AvalPessoaResultado.Count == 0)
{
    <div class="ui arquivar toggle @(Model.Avaliacao.FlagArquivo ? "active" : "") button">Arquiva@(Model.Avaliacao.FlagArquivo ? "da" : "r")</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/js/academica")
}