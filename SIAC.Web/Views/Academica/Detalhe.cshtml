@model AvalAcademica
@{
    ViewBag.Title = "Detalhes de Avaliação Acadêmica";
    List<Questao> lstQuestao = Model.Avaliacao.Questao;
    List<AvalQuesPessoaResposta> lstResposta = Model.Avaliacao.PessoaResposta;
    IEnumerable<AvalPessoaResultado> lstResultado = Model.Avaliacao.AvalPessoaResultado;
}

<h2>
    @ViewBag.Title
    @if (Model.Avaliacao.FlagRealizada)
    {
        if (Sessao.UsuarioCategoriaCodigo == Categoria.ESTUDANTE)
        {
            if (Model.AlunosRealizaram.Where(a => a.MatrAluno == Sessao.UsuarioMatricula).Count() > 0)
            {
                <span class="ui label"><i class="checkmark icon"></i>Realizada</span>
            }
            else
            {
                <span class="ui label"><i class="remove icon"></i>Ausente</span>
            }
        }
        else
        {
            <span class="ui label"><i class="checkmark icon"></i>Realizada</span>
        }
    }
    @if (Sessao.UsuarioCategoriaCodigo == Categoria.PROFESSOR && Model.Avaliacao.FlagCorrecaoPendente)
    {
        <a href="@Url.Action("Corrigir", new { codigo = Model.Avaliacao.CodAvaliacao })" class="ui right floated corrigir button">
            Corrigir
        </a>
        if (Model.AlunoSemJustificacao.Count > 0 || Model.Justificacoes.Count > 0)
        {
            <a href="@Url.Action("Justificar", "Reposicao", new { codigo = Model.Avaliacao.CodAvaliacao })" class="ui right floated reposicao button">Reposição</a>
        }
    }
    <br />
    @if (Sessao.UsuarioCategoriaCodigo == Categoria.PROFESSOR)
    {
        foreach (AvalAcadReposicao reposicao in Model.Reposicoes)
        {
            <a href="@Url.Action("Detalhe", "Reposicao", new { codigo = reposicao.Avaliacao.CodAvaliacao })" class="ui label">Reposição<span class="detail">@reposicao.Avaliacao.CodAvaliacao</span></a>
        }
    }
    else
    {
        foreach (AvalAcadReposicao reposicao in Model.Reposicoes.Where(r => r.Alunos.FirstOrDefault(a => a.MatrAluno == Sessao.UsuarioMatricula) != null))
        {
            <a href="@Url.Action("Detalhe", "Reposicao", new { codigo = reposicao.Avaliacao.CodAvaliacao })" class="ui label">Reposição<span class="detail">@reposicao.Avaliacao.CodAvaliacao</span></a>
        }
    }
</h2>

<div class="ui info message hidden" data-ajuda-mensagem>
    <div class="header">
        Ajuda
    </div>
    <ul class="list">
        <li>Aqui em detalhes você poderá gerenciar os próximos passos que pretende realizar com sua avaliação.</li>
        <li>O botão <b>Histórico</b> serve para abrir a tela de histórico de suas avaliações acadêmicas.</li>
        <li>O botão <b>Arquivar</b> serve para arquivar sua avaliação deixando-a em estado de espera para você tomar ações quando for de seu desejo.</li>
        <li>O botão <b>Configurar</b> serve para abrir a tela de configuração de avaliação na qual você irá manipular as questões da mesma.</li>
        <li>O botão <b>Imprimir</b> serve para abrir a tela de impressão de avaliação onde você poderá imprimir sua avaliação e aplicar em sala de aula.</li>
        <li>O botão <b>Reagendar</b> serve para abrir a tela de agendamento em que você poderá redefinir uma nova data para aplicação de avaliação.</li>
        <li>O botão <b>Aplicar</b> serve para abrir a tela de aplicação de avaliação para você liberar a mesma pros seus alunos.</li>
    </ul>
</div>

<div class="ui basic segment">
    <div class="ui dividing header">
        Detalhes
    </div>
    <table class="ui striped table">
        <thead>
            <tr>
                <th>Disciplina</th>
                <th>Tema(s)</th>
                <th>Quantidade</th>
                <th>Dificuldade</th>
            </tr>
        </thead>
        <tbody>
            @foreach (Disciplina disc in Model.Avaliacao.AvaliacaoTema.Select(a => a.Tema.Disciplina).Distinct().ToList())
            {
                <tr>
                    <td>
                        @* disciplina *@
                        <b>@disc.Descricao</b>
                    </td>
                    <td class="ui labels">
                        @* temas *@
                        @foreach (AvaliacaoTema avalTema in Model.Avaliacao.AvaliacaoTema.Where(a => a.Tema.CodDisciplina == disc.CodDisciplina))
                        {
                            <div class="ui tag label">@avalTema.Tema.Descricao</div>
                        }
                    </td>
                    <td class="ui labels">
                        @* qte de questões *@
                        <div class="ui label">Objetiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, TipoQuestao.OBJETIVA)</div></div>
                        <div class="ui label">Discursiva<div class="detail">@Model.Avaliacao.AvaliacaoTema.ToList().QteQuestoesPorTipo(disc.CodDisciplina, TipoQuestao.DISCURSIVA)</div></div>
                    </td>
                    <td>
                        @* dificuldade *@
                        @Model.Avaliacao.AvaliacaoTema.ToList().MaxDificuldade(disc.CodDisciplina)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (Model.Avaliacao.FlagAgendada)
{
    <div class="ui basic segment">
        <div class="ui dividing header">
            Agendamento
        </div>
        <table class="ui striped table">
            <thead>
                <tr>
                    <th>Turma</th>
                    <th>Data</th>
                    <th>Horário</th>
                    <th>Sala</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>
                        @* Turma *@
                        @Model.Turma.Curso.Descricao (@Model.Turma.CodTurma)
                    </td>
                    <td>
                        @* Data *@
                        @Model.Avaliacao.DtAplicacao.Value.ToShortDateString()
                    </td>
                    <td>
                        @* Horário *@
                        Das @Model.Avaliacao.DtAplicacao.Value.ToShortTimeString() até @Model.Avaliacao.DtTermino.Value.ToShortTimeString()
                    </td>
                    <td>
                        @* Sala *@
                        @Model.Sala.Descricao
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
}
else if (Model.Avaliacao.FlagRealizada)
{
    if (Sessao.UsuarioCategoriaCodigo == Categoria.PROFESSOR)
    {
        <div class="ui basic segment">
            <div class="ui dividing header">
                Desempenho
            </div>
            <div class="ui statistics">
                <div class="statistic">
                    <div class="value">@lstResultado.Where(r => r.Nota == 0).Count()</div>
                    <div class="label">Nota mínima</div>
                </div>
                <div class="statistic">
                    <div class="value">@lstResultado.Where(r => r.Nota == 10).Count()</div>
                    <div class="label">Nota máxima</div>
                </div>
                <div class="statistic">
                    <div class="value">@lstResultado.Where(r => r.Nota >= Parametro.Obter().ValorNotaMedia).Count()</div>
                    <div class="label">Acima da média</div>
                </div>
                <div class="statistic">
                    <div class="value">@lstResultado.Where(r => r.Nota < Parametro.Obter().ValorNotaMedia).Count()</div>
                    <div class="label">Abaixo da média</div>
                </div>
                <div class="statistic">
                    <div class="value">@lstResultado.Average(r => r.Nota).Value.ToString("0.0")</div>
                    <div class="label">Nota média</div>
                </div>
            </div>
        </div>
        <div class="ui basic segment">
            <div class="ui dividing header">
                Classificação
            </div>
            @Html.Partial("_AvaliacaoResultadoClassificacao", Model.Avaliacao.AvalPessoaResultado.OrderBy(a=>a.PessoaFisica.PrimeiroNome).ToList())
        </div>
        <div class="ui basic segment">
            <div class="ui dividing header">
                Resultados
            </div>
            <div class="ui accordion">
                @for (int i = 0, length = lstQuestao.Count; i < length; i++)
                {
                    IEnumerable<AvalQuesPessoaResposta> lstTempResposta = lstResposta
                        .Where(r => r.CodQuestao == lstQuestao[i].CodQuestao);

                    <div class="title">
                        <i class="dropdown icon"></i>
                        @((i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).ToShortString(80))
                    </div>
                    <div id="@lstQuestao[i].CodQuestao" class="questao content">
                        <div class="ui segment">
                            <div class="ui dividing header" style="text-align:justify">
                                @Html.Raw((i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).ToHtml("p"))
                            </div>
                            @if (lstQuestao[i].CodTipoQuestao == TipoQuestao.OBJETIVA)
                            {
                                <div class="ui stackable grid">
                                    <div class="twelve wide column">
                                        <div class="ui relaxed list">
                                            @foreach (Alternativa alternativa in lstQuestao[i].Alternativa)
                                            {
                                                <div class="item">
                                                    <div class="middle aligned content">
                                                        <b>@alternativa.CodOrdem.GetIndiceAlternativa()</b>) @alternativa.Enunciado
                                                        @if (alternativa.FlagGabarito.HasValue && alternativa.FlagGabarito.Value)
                                                        {
                                                            <a data-html="@(("<b>Comentário</b>: " + alternativa.Comentario).Replace("\n", "<br>"))" data-variation="very wide" class="ui tag label">Correta</a>
                                                        }
                                                    </div>
                                                </div>
                                            }
                                        </div>
                                        @if (lstQuestao[i].QuestaoAnexo.Count > 0)
                                        {
                                            <div class="accordion">
                                                <div class="title"><i class="icon dropdown"></i>Anexos</div>
                                                <div class="content">
                                                    @foreach (QuestaoAnexo anexo in lstQuestao[i].QuestaoAnexo)
                                                    {
                                                        Html.Partial("_Anexo", anexo);
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                    <div class="four wide column" style="text-align:center">
                                        <canvas style="display:inline" width="200" height="200"></canvas>
                                    </div>
                                </div>
                                <code class="dados" hidden>@Html.Raw(lstQuestao[i].ToJsonChart(lstTempResposta.ToList()))</code>
                            }
                            else if (lstQuestao[i].CodTipoQuestao == TipoQuestao.DISCURSIVA)
                            {
                                <div class="ui stackable grid">
                                    <div class="twelve wide column">
                                        <div>
                                            <a data-html="@(("<b>Comentário</b>: " + lstQuestao[i].Comentario).Replace("\n", "<br>"))" data-variation="very wide" class="ui ribbon label">Chave de Resposta</a>
                                            @Html.Raw(lstQuestao[i].ChaveDeResposta.ToHtml("p", "i"))
                                        </div>
                                    </div>
                                    <div class="four wide column" style="text-align:center">
                                        @{
                                            double? media = lstTempResposta.Average(r => r.RespNota);
                                        }
                                        <div class="ui statistic" style="display:inline">
                                            <div class="value">
                                                @(media != null ? media.Value.ToString("0.0") : "0")
                                            </div>
                                            <div class="label">
                                                Nota Média
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="ui basic segment">
            <div class="ui dividing header">
                Individual
            </div>
            <div class="ui form">
                <div class="field inline">
                    <label>Aluno</label>
                    <select class="ui search aluno dropdown">
                        <option value="">Selecione</option>
                        @foreach (Aluno aluno in Model.AlunosRealizaram)
                        {
                            <option value="@aluno.MatrAluno">@aluno.Usuario.PessoaFisica.Nome</option>
                        }
                    </select>
                </div>
            </div>
            <div class="partial"></div>
        </div>
    }
    else if (DateTime.Now < Model.Avaliacao.DtTermino)
    {
        <div class="ui message">
            <p>Você poderá conferir seu resultado assim que o tempo de aplicação da prova acabar.</p>
        </div>
    }
    else
    {
        int codPessoaFisica = Usuario.ObterPessoaFisica(Sessao.UsuarioMatricula);
        List<AvalQuesPessoaResposta> lstPessoaResposta = lstResposta.Where(p => p.CodPessoaFisica == codPessoaFisica).ToList();
        AvalPessoaResultado avalPessoaResultado = Model.Avaliacao.AvalPessoaResultado.FirstOrDefault(r => r.CodPessoaFisica == codPessoaFisica);
        int quantidadeAcerto = lstPessoaResposta.Where(p => p.RespNota.HasValue && p.RespNota.Value == 10).Count();
        double porcentagem = quantidadeAcerto / lstQuestao.Count;
        if (avalPessoaResultado != null && avalPessoaResultado.Justificacao.Count == 0)
        {
            <div class="ui basic segment">
                <div class="ui dividing header">
                    Desempenho
                </div>
                <div class="ui statistics">
                    <div class="statistic">
                        <div class="value">
                            @((((double)quantidadeAcerto / (double)lstQuestao.Count) * 100).ToString("0.##'%'"))
                        </div>
                        <div class="label">
                            Porcentagem de Acerto
                        </div>
                    </div>
                    <div class="statistic">
                        <div class="value">
                            @quantidadeAcerto/@lstQuestao.Count
                        </div>
                        <div class="label">
                            Quantidade de Acerto
                        </div>
                    </div>
                    <div class="statistic @(avalPessoaResultado.Nota.Value >= Parametro.Obter().ValorNotaMedia ? "green" : "red")">
                        <div class="value">
                            @avalPessoaResultado.Nota.Value.ToString("0.0")
                        </div>
                        <div class="label">
                            Nota @(lstPessoaResposta.Where(r => !r.RespNota.HasValue).Count() == 0 ? "" : "Parcial")
                        </div>
                    </div>
                </div>
            </div>
            <div class="ui basic segment">
                <div class="ui dividing header">
                    Resultado
                </div>
                <div class="ui accordion">
                    @for (int i = 0; i < lstQuestao.Count; i++)
                    {
                        AvalQuesPessoaResposta resposta = lstPessoaResposta.First(r => r.CodQuestao == lstQuestao[i].CodQuestao);
                        <div class="title">
                            <i class="dropdown icon"></i>@((i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).ToShortString(80))
                            @if (lstQuestao[i].CodTipoQuestao == TipoQuestao.OBJETIVA)
                            {
                                Alternativa correta = lstQuestao[i].Alternativa.Single(a => a.FlagGabarito.HasValue && a.FlagGabarito.Value);
                                <div class="ui @(resposta.RespAlternativa == correta.CodOrdem ? "green" : "red" ) label">@(resposta.RespAlternativa == correta.CodOrdem ? Html.Raw("<i class=\"checkmark icon\"></i>Correta") : Html.Raw("<i class=\"remove icon\"></i>Incorreta") )</div>
                            }
                            else if (resposta.RespNota.HasValue)
                            {
                                <div data-html="@(("<b>Observação</b>: " + resposta.ProfObservacao).Replace("\n", "<br>"))" data-variation="very wide" class="ui @(resposta.RespNota.Value > Parametro.Obter().ValorNotaMedia ? "green" : "red" ) label"><i class="icon write"></i><div class="detail">@resposta.RespNota.Value.ToString("0.0")</div></div>
                            }
                        </div>
                        <div class="content">
                            <div class="ui segment">
                                <div class="ui dividing header" style="text-align:justify">
                                    @Html.Raw((i.GetIndiceQuestao() + ". " + lstQuestao[i].Enunciado).ToHtml("p"))
                                </div>
                                @if (lstQuestao[i].CodTipoQuestao == TipoQuestao.OBJETIVA)
                                {
                                    <div class="ui list">
                                        @foreach (Alternativa alternativa in lstQuestao[i].Alternativa)
                                        {
                                            <div class="item">
                                                <div class="middle aligned content">
                                                    <b>@alternativa.CodOrdem.GetIndiceAlternativa()</b>) @alternativa.Enunciado
                                                    @if (alternativa.FlagGabarito.HasValue && alternativa.FlagGabarito.Value)
                                                    {
                                                        <a data-html="@(("<b>Comentário</b>: " + alternativa.Comentario).Replace("\n", "<br>"))" data-variation="very wide" class="ui tag label">Correta</a>
                                                    }
                                                    @if (alternativa.CodOrdem == resposta.RespAlternativa)
                                                    {
                                                        <a data-html="@(("<b>Comentário</b>: " + alternativa.Comentario).Replace("\n", "<br>"))" data-variation="very wide" class="ui tag label">Marcada</a>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div>
                                        <a class="ui ribbon label" data-html="@(("<b>Chave de Resposta</b>: "+lstQuestao[i].ChaveDeResposta).Replace("\n", "<br>"))" data-variation="very wide">Resposta</a>
                                        @Html.Raw(resposta.RespDiscursiva.ToHtml("p", "i"))
                                    </div>
                                }
                                @if (lstQuestao[i].QuestaoAnexo.Count > 0)
                                {
                                    <div class="accordion">
                                        <div class="title"><i class="icon dropdown"></i>Anexos</div>
                                        <div class="content">
                                            @foreach (QuestaoAnexo anexo in lstQuestao[i].QuestaoAnexo)
                                            {
                                                @Html.Partial("_Anexo", anexo)
                                            }
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    }
}
                                            
<a href="@Url.Action("Index")" class="ui button">Histórico</a>
@if (Sessao.UsuarioCategoriaCodigo == Categoria.PROFESSOR)
{
    if (!Sistema.AvaliacaoUsuario.ContainsKey(Model.Avaliacao.CodAvaliacao.ToLower()))
    {
        if (Model.Avaliacao.FlagArquivo || !Model.Avaliacao.FlagRealizada)
        {
            <div class="ui arquivar toggle @(Model.Avaliacao.FlagArquivo ? "active" : "") button">Arquiva@(Model.Avaliacao.FlagArquivo ? "da" : "r")</div>
            if (!Model.Avaliacao.FlagArquivo)
            {
                <a href="@Url.Action("Configurar", new { codigo = Model.Avaliacao.CodAvaliacao })" class="ui button">Configurar</a>
            }
        }
        if (!Model.Avaliacao.FlagArquivo)
        {
            <a href="@Url.Action("Avaliacao", "Impressao", new { codigo = Model.Avaliacao.CodAvaliacao })" class="ui button">Imprimir</a>
        }
    }
}
@if (Sessao.UsuarioCategoriaCodigo == Categoria.PROFESSOR && Model.Avaliacao.FlagPendente && !Sistema.AvaliacaoUsuario.ContainsKey(Model.Avaliacao.CodAvaliacao.ToLower()))
{
    <a href="@Url.Action("Agendar", new { codigo = Model.Avaliacao.CodAvaliacao })" class="ui button">@(Model.Avaliacao.FlagAgendada ? "Reagendar" : "Agendar")</a>
}
@if (Model.Avaliacao.FlagAgendada)
{
    <a href="@Url.Action("Agendada", new { codigo = Model.Avaliacao.CodAvaliacao })" class="ui button">@(Sessao.UsuarioCategoriaCodigo == 2 ? "Aplicar" : "Realizar" )</a>
}

@section Scripts {
    @Scripts.Render("~/bundles/js/academica")
    @Scripts.Render("~/bundles/chart")
}